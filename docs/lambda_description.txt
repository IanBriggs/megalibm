Poly<func,[low,high]> : A mathematical polynomial of 'func' over [low,high]
Impl<func,[low,high]> : A function implementation of a Poly
Tuple<a,b> : A tuple


Function: (polynomial func [low,high] monomials coefficients)
Return: Poly<func,[low,high]>
Conditions:
 * (<= (len monomials) (len coefficients))
 * (all-integers monomials)
 * (all-float-or-none coefficients)




Function: (general Poly<func,[low,high]>)
Return: Impl<func,[low,high]>
Conditions: None

Function: (horner Poly<func,[low,high]>)
Return: Impl<func,[low,high]>
Conditions: None




Function: (narrow Impl<func,[low,high]> new_low new_high)
Return: Impl<func,[new_low,new_high]>
Conditions:
 * (<= low new_low new_high high)




Function: (double-angle Tuple<Impl<sin,[0.0,high_c]>,Impl<cos,[0.0,high_c]>>)
Return: Tuple<Impl<sin,0.0,high>,Impl<cos,0.0,high>>
        where high = (* 2 (min high_s high_c))
Conditions: None




Function: (flip-about-zero-x Impl<func,[0.0,high]>)
Return: Impl<func,[-high,high]>
Conditions:
  * (is-odd func)

Function: (mirror-about-zero-x Impl<func,[0.0,high]>)
Return: Impl<func,[-high,high]>
Conditions:
  * (is-even func)




Function: (repeat-inf Impl<func,[0.0,high]>)
Return: Impl<func,0.0,inf>
Conditions:
  * (is-periodic func)
  * (has-period func period)

Function: (repeat-flip Impl<func,[0.0,high]>)
Return: Impl<func,[0.0,new_high]>
        where new_high = (* 2 high)
Condition:
  * (is-symmetric-x func 0.0 high 2*high)

Function: (repeat-negate Impl<func,[0.0,high]>)
Return: Impl<func,[0.0,new_high]>
        where new_high = (* 2 high)
Condition:
  * (is-negation func 0.0 high 2*high)




Function: (make-tuple a b)
Return: Tuple<a,b>
Conditions: None

Function: (first Tuple<a,b>)
Return: a
Condition: None

Function: (second Tuple<a,b>)
Return: b
Condition: None


